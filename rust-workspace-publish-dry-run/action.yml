name: 'Rust Workspace Publish Dry Run'
description: 'Dry run publish workspace crates.'
runs:
  using: "composite"
  steps:

  - shell: bash
    run: cargo install --target-dir ~/.cargo/target --locked --version 0.5.16 cargo-hack

  # Remove [patch.crates-io] entries in the workspace Cargo.toml that reference
  # git repos. These will be removed when published.
  - shell: bash
    run: sed -i.bak -r '/git ?=/d' Cargo.toml

  # Vendor all the dependencies into the vendor/ folder.
  - shell: bash
    run: cargo vendor --versioned-dirs

  # Package the crates that will be published. Verification is disabled because
  # we aren't ready to verify yet.
  - shell: bash
    run: cargo hack --ignore-private package --no-verify

  # Add each crate that was packaged to the vendor/ directory.
  - shell: bash
    run: |
      for crate in target/package/*.crate
      do
        name=$(basename "$crate" .crate)
        tar xvfz "$crate" -C vendor/
        # Crates in the vendor directory require a checksum file, but it doesn't
        # matter if it is empty.
        echo '{"files":{}}' > vendor/$name/.cargo-checksum.json
      done

  # Rerun the package command but with verification enabled this time. Tell
  # cargo to use the local vendor/ directory as the source for all packages. Run
  # the package command on the full feature powerset so that all features of
  # each crate are verified to compile.
  - shell: bash
    run: >
      cargo hack
      --feature-powerset
      --ignore-private
      --config "source.crates-io.replace-with = 'vendored-sources'"
      --config "source.vendored-sources.directory = 'vendor'"
      package
