name: Publish Dry Run

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        default: 'ubuntu-latest'
        type: string
      cargo-hack-feature-options:
        required: false
        default: '--feature-powerset'
        type: string
      cargo-package-options:
        required: false
        type: string

jobs:

  publish-dry-run:
    runs-on: ${{ inputs.runs-on }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - uses: stellar/binaries@v12
      with:
        name: cargo-hack
        version: 0.5.16

    # Vendor all the dependencies into the vendor/ folder. Temporarily remove
    # [patch.crates-io] entries in the workspace Cargo.toml that reference git
    # repos. These will be removed when published.
    - run: |
        sed -i.bak -r '/git ?=/d' Cargo.toml
        cargo vendor --versioned-dirs
        mv Cargo.toml.bak Cargo.toml

    # Package the crates that will be published. Verification is disabled because
    # we aren't ready to verify yet.
    - run: cargo hack --ignore-private package --no-verify ${{ inputs.cargo-package-options }}

    # Add each crate that was packaged to the vendor/ directory.
    - run: |
        for crate in target/package/*.crate
        do
          name=$(basename "$crate" .crate)
          tar xvfz "$crate" -C vendor/
          # Crates in the vendor directory require a checksum file, but it doesn't
          # matter if it is empty.
          echo '{"files":{}}' > vendor/$name/.cargo-checksum.json
        done

    # Rerun the package command but with verification enabled this time. Tell
    # cargo to use the local vendor/ directory as the source for all packages. Run
    # the package command on the full feature powerset so that all features of
    # each crate are verified to compile.
    - run: >
        cargo hack
        ${{ inputs.cargo-hack-feature-options }}
        --ignore-private
        --config "source.crates-io.replace-with = 'vendored-sources'"
        --config "source.vendored-sources.directory = 'vendor'"
        package
        ${{ inputs.cargo-package-options }}
